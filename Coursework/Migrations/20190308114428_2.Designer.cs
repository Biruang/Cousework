// <auto-generated />
using System;
using Coursework.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Coursework.Migrations
{
    [DbContext(typeof(SheduleDbContext))]
    [Migration("20190308114428_2")]
    partial class _2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Coursework.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Coursework.Models.Purpouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreationTime");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Purpouses");
                });

            modelBuilder.Entity("Coursework.Models.Reminder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<int>("EventId");

                    b.Property<int>("RepeatMode");

                    b.Property<int?>("TaskId");

                    b.Property<DateTime>("TriggerTime");

                    b.HasKey("Id");

                    b.HasIndex("EventId")
                        .IsUnique();

                    b.HasIndex("TaskId");

                    b.ToTable("Reminders");
                });

            modelBuilder.Entity("Coursework.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Completed");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int?>("PurpouseId");

                    b.HasKey("Id");

                    b.HasIndex("PurpouseId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Coursework.Models.TaskList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("TaskLists");
                });

            modelBuilder.Entity("Coursework.Models.TaskListTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TaskId");

                    b.Property<int>("TaskListId");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.HasIndex("TaskListId");

                    b.ToTable("TaskListTask");
                });

            modelBuilder.Entity("Coursework.Models.Reminder", b =>
                {
                    b.HasOne("Coursework.Models.Event", "Event")
                        .WithOne("Reminder")
                        .HasForeignKey("Coursework.Models.Reminder", "EventId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Coursework.Models.Task", "Task")
                        .WithMany("Reminders")
                        .HasForeignKey("TaskId");
                });

            modelBuilder.Entity("Coursework.Models.Task", b =>
                {
                    b.HasOne("Coursework.Models.Purpouse", "Purpouse")
                        .WithMany("Tasks")
                        .HasForeignKey("PurpouseId");
                });

            modelBuilder.Entity("Coursework.Models.TaskListTask", b =>
                {
                    b.HasOne("Coursework.Models.Task", "Task")
                        .WithMany("TaskListTasks")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Coursework.Models.TaskList", "TaskList")
                        .WithMany("TaskListTasks")
                        .HasForeignKey("TaskListId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
